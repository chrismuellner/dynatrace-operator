name: Publish images

on:
  push:
    branches:
      - "release-*"
    tags:
      - v[0-9]+.[0-9]+.[0-9]+

jobs:
  prepare:
    name: Prepare properties
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Prepare build parameters
        id: prep
        run: |
          hack/build/ci/prepare-build-variables.sh
    outputs:
      labels: ${{ steps.prep.outputs.docker_image_labels }}
      version: ${{ steps.prep.outputs.docker_image_tag }}
      goargs: ${{ steps.prep.outputs.go_build_args }}
      goversion: "1.18"

  # Workflow needs to build docker images again as separate workflows don't have access to others artifacts
  # https://github.com/actions/download-artifact/issues/3
  build-amd:
    name: Build amd image
    uses: ./.github/workflows/build-dockerimage.yaml
    needs: [prepare]
    with:
      platform: amd64
      goversion: ${{ needs.prepare.outputs.goversion }}
      goargs: ${{ needs.prepare.outputs.goargs }}
      labels: ${{ needs.prepare.outputs.labels }}
      image-tag: ${{ needs.prepare.outputs.version }}

  build-arm:
    name: Build arm image
    uses: ./.github/workflows/build-dockerimage.yaml
    needs: [prepare]
    with:
      platform: arm64
      goversion: ${{ needs.prepare.outputs.goversion }}
      goargs: ${{ needs.prepare.outputs.goargs }}
      labels: ${{ needs.prepare.outputs.labels }}
      image-tag: ${{ needs.prepare.outputs.version }}

  push-dockerhub-amd:
    name: Push amd image to Dockerhub
    uses: ./.github/workflows/upload-dockerimage.yaml
    needs: [prepare, build-amd]
    with:
      platform: amd64
      labels: ${{ needs.prepare.outputs.labels }}
      version: ${{ needs.prepare.outputs.version }}
      registry: quay.io
      repository: dynatrace/dynatrace-operator
    secrets:
      docker_repo_username: ${{ secrets.DOCKERHUB_USERNAME }}
      docker_repo_password: ${{ secrets.DOCKERHUB_PASSWORD }}

  push-dockerhub-arm:
    name: Push arm image to Dockerhub
    uses: ./.github/workflows/upload-dockerimage.yaml
    needs: [prepare, build-arm]
    with:
      platform: arm64
      labels: ${{ needs.prepare.outputs.labels }}
      version: ${{ needs.prepare.outputs.version }}
      registry: quay.io
      repository: dynatrace/dynatrace-operator
    secrets:
      docker_repo_username: ${{ secrets.DOCKERHUB_USERNAME }}
      docker_repo_password: ${{ secrets.DOCKERHUB_PASSWORD }}

  manifest:
    name: Create manifests
    needs: [prepare, push-dockerhub-amd, push-dockerhub-arm]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        registry: [ dockerhub ] #[  rhcc, gcr, dockerhub ]
        include:
          # - registry: rhcc
          #   url: quay.io
          #   repository: dynatrace/dynatrace-operator
          #   username: ${{ secrets.DOCKERHUB_USERNAME }}
          #   password: ${{ secrets.DOCKERHUB_PASSWORD }}
          # - registry: gcr
          #   url: quay.io
          #   repository: dynatrace/dynatrace-operator
          #   username: ${{ secrets.DOCKERHUB_USERNAME }}
          #   password: ${{ secrets.DOCKERHUB_PASSWORD }}
          - registry: dockerhub
            url: quay.io
            repository: dynatrace/dynatrace-operator
            username_secret: DOCKERHUB_USERNAME
            password_secret: DOCKERHUB_PASSWORD
    steps:
      - name: Login to ${{matrix.repository}}
        uses: docker/login-action@v1
        env:
          USERNAME: ${{ secrets[matrix.username_secret] }}
          PASSWORD: ${{ secrets[matrix.password_secret] }}
        with:
          registry: ${{ matrix.url }}
          username: ${ USERNAME }
          password: ${ PASSWORD }
      - name: Create manifest for ${{matrix.repository}}
        env:
          IMAGE: ${{matrix.url}}/${{matrix.repository}}
          VERSION: ${{ needs.prepare.outputs.version }}
        # Simply pulls, otherwise the artifact would need to be re-downloaded and re-tagged correctly which would mean
        # two more steps instead of two more lines
        run: |          
          docker pull ${{matrix.url}}/${{matrix.repository}}:${ VERSION }-${{ matrix.registry }}-amd64
          docker pull ${{matrix.url}}/${{matrix.repository}}:${ VERSION }-${{ matrix.registry }}-arm64
          hack/build/ci/create-manifest.sh "${IMAGE}" "${ VERSION }" true
